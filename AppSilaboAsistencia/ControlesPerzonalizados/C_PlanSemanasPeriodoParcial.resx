<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Bordeado.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnContenedor.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        o6p+B9czZ5DaNqTMAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="sbDatos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAoAAAC+CAYAAAAMaZ7eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAABeSURBVFhH7cqxDcIwAABBBjDOmuzsMTIAhBIRXfroi6v+
        H6/ntg7vC+s7noU/jdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRIjdRINxvH3M/CjzH3
        Dw4GOIa3uhWWAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="lblTitulo.BaseStylesheet" xml:space="preserve">
    <value>#bunifu-label { padding: 0px; margin: auto; padding-top: 4px;font-family: 'Montserrat Alternates'; font-size: 12pt; width: 100%; height: 100%; font-style: normal; font-weight: normal; text-decoration: none; color: rgb(232, 158, 31); text-align: center; }</value>
  </data>
</root>